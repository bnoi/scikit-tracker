
Representation of trajectories
==============================

``sktracker.trajectories.Trajectories`` is probably the most important
class in ``sktracker`` as it represents detected objects and links
between them. ``Trajectories`` is a subclass of ``pandas.DataFrame``
which provides convenient methods.

A ``Trajectories`` object consists of several single trajectory. Each
row contains an **object** which has several features (columns) and two
integer as index. The first integer is a time stamp ``t_stamp`` and the
second one is a ``label``. Objects from the same ``label`` belong to the
same trajectory.

Be aware that ``t_stamp`` are time index and does not represent time in
second or minute. Time poisition (in second or minute) can be stored as
object's features in columns.

Create trajectories
-------------------

All you need to create a ``Trajectories`` object is a
``pandas.DataFrame``.


.. code:: python

    import pandas as pd
    import numpy as np
    
    trajs = pd.DataFrame(np.random.random((30, 3)), columns=['x', 'y', 'z'])
    trajs['t_stamp'] = np.sort(np.random.choice(range(10), (len(trajs),)))
    trajs['label'] = list(range(len(trajs)))
    trajs['t'] = trajs['t_stamp'] * 60  # t are in seconds for example
    trajs.set_index(['t_stamp', 'label'], inplace=True)
    trajs.sort_index(inplace=True)
    trajs.head()



.. raw:: html

    <div style="max-height:1000px;max-width:1500px;overflow:auto;">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th>x</th>
          <th>y</th>
          <th>z</th>
          <th>t</th>
        </tr>
        <tr>
          <th>t_stamp</th>
          <th>label</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th rowspan="3" valign="top">0</th>
          <th>0</th>
          <td> 0.136820</td>
          <td> 0.052267</td>
          <td> 0.720264</td>
          <td>  0</td>
        </tr>
        <tr>
          <th>1</th>
          <td> 0.637322</td>
          <td> 0.063170</td>
          <td> 0.194157</td>
          <td>  0</td>
        </tr>
        <tr>
          <th>2</th>
          <td> 0.545661</td>
          <td> 0.068337</td>
          <td> 0.491243</td>
          <td>  0</td>
        </tr>
        <tr>
          <th rowspan="2" valign="top">1</th>
          <th>3</th>
          <td> 0.533964</td>
          <td> 0.680509</td>
          <td> 0.065720</td>
          <td> 60</td>
        </tr>
        <tr>
          <th>4</th>
          <td> 0.214166</td>
          <td> 0.111218</td>
          <td> 0.274236</td>
          <td> 60</td>
        </tr>
      </tbody>
    </table>
    </div>



Vizualize trajectories
----------------------

Get informations
----------------

Modify trajectories
-------------------

Measurements on trajectories
----------------------------

.. code:: python

    # Run this cell first.
    %matplotlib inline
    %load_ext autoreload
    %autoreload 2